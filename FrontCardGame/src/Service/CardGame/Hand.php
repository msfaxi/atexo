<?php

/**
 * Copyright (C) Msfaxi - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 */
namespace App\Service\CardGame;


class Hand extends Pack
{
    private CONST NBCARD = 10;
    private $pack;
    private $player;

    public function __construct(Player $player, Pack $pack, $cards = [])
    {
        parent::__construct($cards);
        $this->pack = $pack;
        $this->player = $player;
    }

    /**
     * @return Card
     * @throws \Exception
     */
    public function chooseCard()
    {
        if (!count($this->pack->getCards()) > 0 ) {
            throw new \Exception('No more card');
        }
        $cards = $this->pack->shuffle()->getCards();
        $card = array_pop($cards);
        $this->pack->setCards($cards);
        return $card;
    }

    /**
     * init hands
     * @return Pack|void
     * @throws \Exception
     */
    public function init()
    {
        for ($j = 1 ; $j <= self::NBCARD; $j++) {
            array_push($this->cards, $this->chooseCard());
        }

        return $this;
    }

    public function display(Pack $pack = null): string
    {
        return $this->player->getFirstname()." # " . parent::display($pack); // TODO: Change the autogenerated stub
    }

    /**
     * @return Pack
     */
    public function getPack(): Pack
    {
        return $this->pack;
    }

    /**
     * @param Pack $pack
     * @return Hand
     */
    public function setPack(Pack $pack): Hand
    {
        $this->pack = $pack;
        return $this;
    }

    /**
     * @return Player
     */
    public function getPlayer(): Player
    {
        return $this->player;
    }

    /**
     * @param Player $player
     * @return Hand
     */
    public function setPlayer(Player $player): Hand
    {
        $this->player = $player;
        return $this;
    }

    /**
     * @return array
     */
    public function getCards(): array
    {
        return $this->cards;
    }

}